version: 2.1

commands:
  checkout-and-yarn-install:
    steps:
      - checkout
      - run:
          name: Versions
          command: yarn versions
      - restore_cache:
          key: yarn-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
      - run:
          name: Hide gyp file
          command: mv binding.gyp binding.gyp.bak
      - run:
          name: Install dependencies
          command: yarn install --ignore-engines
      - run:
          name: Restore gyp file
          command: mv binding.gyp.bak binding.gyp
      - save_cache:
          key: yarn-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ./yarn.lock
  yarn-prebuild:
    steps:
      - run:
          name: Compile prebuilt binaries
          command: yarn prebuild
  persist-prebuilds:
    steps:
      - persist_to_workspace:
          root: ~/dd-pprof
          paths:
            - prebuilds

node-bench-sirun-base: &node-bench-sirun-base
  parameters:
    node-version:
      type: string
      default: "latest"
  docker:
    - image: node:<< parameters.node-version >>
  resource_class: medium+
  working_directory: ~/dd-pprof
  steps:
    - checkout-and-yarn-install
    - attach_workspace:
        at: ~/dd-pprof
    - run:
        name: Install system deps
        command: apt-get update && apt-get install -y valgrind wget
    - run:
        name: Install sirun
        command: wget https://github.com/DataDog/sirun/releases/download/v0.1.9/sirun-v0.1.9-x86_64-unknown-linux-gnu.tar.gz && tar zxf sirun-v0.1.9-x86_64-unknown-linux-gnu.tar.gz && mv sirun /usr/bin
    - run:
        name: Run sirun
        command: |
          cd benchmark/sirun/$(node -p "process.env.CIRCLE_JOB.replace('node-bench-sirun-', '').replace('-latest', '').replace(/-\d*$/, '')")
          node /root/dd-pprof/benchmark/sirun/run-all-variants.js | tee ../$CIRCLE_JOB-sirun-output.ndjson
    - persist_to_workspace:
        root: ~/dd-pprof
        paths:
          - benchmark/sirun/*-sirun-output.ndjson

prebuild-linux-base: &prebuild-linux-base
  docker:
    # from node:10.0.0 on 2021-08-30
    # glibc needs to be old enough for older distros
    - image: node@sha256:4013aa6c297808defd01234fce4a42e1ca0518a5bd0260752a86a46542b38206
  working_directory: ~/dd-pprof
  resource_class: medium+
  steps:
    - checkout-and-yarn-install
    - yarn-prebuild
    - persist-prebuilds

jobs:
  node-bench-sirun-cpu-profiler: *node-bench-sirun-base
  node-bench-sirun-sampling: *node-bench-sirun-base

  linux-x64-18:
    <<: *prebuild-linux-base
    docker:
      # from node:12.0.0 on 2021-08-30
      - image: node@sha256:c88ef4f7ca8d52ed50366d821e104d029f43e8686120a29541ce0371f333453f
    environment:
      - ARCH=x64
      - NODE_VERSIONS=15 - 18

  linux-x64-12:
    <<: *prebuild-linux-base
    environment:
      - ARCH=x64
      - NODE_VERSIONS=12 - 14

workflows:
  version: 2
  build:
    jobs: &jobs
      # Linux x64
      - linux-x64-18
      - linux-x64-12
      - node-bench-sirun-cpu-profiler: &matrix-exact-supported-node-versions
          requires:
            - linux-x64-18
            - linux-x64-12
          matrix:
            parameters:
              node-version: ["12-buster", "14", "16", "18"]
      - node-bench-sirun-sampling: *matrix-exact-supported-node-versions
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs: *jobs
